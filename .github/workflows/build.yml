name: 'publish'

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y ibwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.      

      - name: Create .env file (macOS and Linux)
        if: matrix.platform != 'windows-latest'
        run: |
          touch .env
          echo "SSH_JUMPHOST=${{ secrets.SSH_JUMPHOST }}" >> .env
          echo "SSH_JUMPHOST_USER=${{ secrets.SSH_JUMPHOST_USER }}" >> .env
          echo "SSH_JUMPHOST_PASS=${{ secrets.SSH_JUMPHOST_PASS }}" >> .env
          echo "FTP_SERVER=${{ secrets.FTP_SERVER }}" >> .env
          cat .env

      - name: Create .env file (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          New-Item -ItemType File -Path .env -Force
          Add-Content -Path .env -Value "SSH_JUMPHOST=${{ secrets.SSH_JUMPHOST }}"
          Add-Content -Path .env -Value "SSH_JUMPHOST_USER=${{ secrets.SSH_JUMPHOST_USER }}"
          Add-Content -Path .env -Value "SSH_JUMPHOST_PASS=${{ secrets.SSH_JUMPHOST_PASS }}"
          Add-Content -Path .env -Value "FTP_SERVER=${{ secrets.FTP_SERVER }}"
          Get-Content .env

      - name: copy .env file to source
        run: cp .env /src-tauri
      - name: Set Updater Signing Keys
        run: |
          echo "TAURI_SIGNING_PRIVATE_KEY=${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}" >> $GITHUB_ENV
          echo "TAURI_SIGNING_PRIVATE_KEY_PASSWORD=${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}" >> $GITHUB_ENV

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          SSH_JUMPHOST: ${{ secrets.SSH_JUMPHOST }}
          SSH_JUMPHOST_USER: ${{ secrets.SSH_JUMPHOST_USER }}
          SSH_JUMPHOST_PASS: ${{ secrets.SSH_JUMPHOST_PASS }}
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}